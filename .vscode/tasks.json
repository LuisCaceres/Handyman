// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "start",
			"dependsOn": [
				"typescript",
				"unit-tests"
			],
			"runOptions": {
				"runOn": "folderOpen"
			}
		},
		{
			"label": "unit-tests",
			"command": "mocha --colors --node-option=enable-source-maps --node-option=watch --watch-files=src/**/*.ts out/test/**/*.js",
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"type": "shell",
			"problemMatcher": {
				"owner": "mocha",
				// The file name for reported problems is relative to the opened folder.
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				// The name that will be shown as the source of the problem.
				"source": "unit tests",
				// The actual pattern to match problems in the output.
				"pattern": {
					// The regular expression. Example to match: `src\test\utils.test.ts:352:31`.
					"regexp": "\\(([\\w\\W]+?\\.ts):(\\d+):(\\d+)",
					// The first match group matches the file name which is relative.
					"file": 1,
					// The second match group matches the line on which the problem occurred.
					"line": 2,
					// The third match group matches the column at which the problem occurred.
					"column": 3,
					// The fourth match group matches the problem's severity. Can be ignored. Then all problems are captured as errors.
					// "severity": 4,
					// The fifth match group matches the message.
					// "message": 5
				}
			}
		},
		{
			"label": "typescript",
			"command": "tsc --watch",
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"problemMatcher": "$tsc-watch",
			"type": "shell",
		},
	]
}